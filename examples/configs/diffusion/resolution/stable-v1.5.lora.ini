[core/cli]
task_name = core/task/supervised
from_ckpt_dir = ./cache
cache_dir = ./cache
output_folder = ./images
train_file = ./train.tsv
dev_file = ./dev.tsv
test_file = ./test.tsv

# model
[core/model/diffusers/peft/lora/resolution/stable]
pretrained_name = stable-v1.5-x4-upscaler

# dataset
[core/dataset/ast]
names = ['text', 'image1', 'image2']

[core/dataset/ast/train]
data_files = ${core/cli:train_file}
preprocess_functions = [
    'core/process/diffusion/stable/resolution(text, core/process/image/read(image1), core/process/image/read(image2))'
  ]

[core/dataset/ast/dev]
data_files = ${core/cli:dev_file}
preprocess_functions = [
    'core/process/diffusion/stable/resolution(text, core/process/image/read(image1), core/process/image/read(image2))'
  ]

[core/dataset/ast/test]
names = ['text', 'image1']
data_files = ${core/cli:test_file}
preprocess_functions = [
    'core/process/diffusion/stable/resolution/inputs(text, core/process/image/read(image1))',
  ]

# process
[core/process/diffusion/stable]
pretrained_name = stable-v1.5-x4-upscaler
max_seq_length = 77
low_res_image_size = (128, 128)
image_size = (512, 512)

[core/process/image]
http_url = http://0.0.0.0:11230/?file={0}

[core/process/diffusion]
output_folder = ${core/cli:output_folder}

# optim
[core/optim/adamw]
learning_rate = 0.0001

# scheduler
[core/scheduler/linear_warmup]
num_warmup_rate = 0.001

# task
[core/task/supervised]
model = core/model/diffusers/peft/lora/resolution/stable
optim = core/optim/adamw
scheduler = core/scheduler/linear_warmup
dataset = core/dataset/ast
score_fn = core/score/loss
monitor_fns = ['core/score/loss']
output_header = ['text', 'image1']
postprocess_fn = core/postprocess/diffusion/image
writer = core/writer/csv

from_ckpt_dir = ${core/cli:from_ckpt_dir}
to_ckpt_dir = ${core/cli:cache_dir}
output_path = ${core/cli:cache_dir}/output.txt

num_workers = 16
log_freq = 10

train_batch_size = 4
dev_batch_size = 4
test_batch_size = 4
